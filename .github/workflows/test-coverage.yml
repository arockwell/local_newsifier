name: Test Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: 1.7.1
        virtualenvs-create: true
        virtualenvs-in-project: true
    - name: Cache Poetry virtualenv
      uses: actions/cache@v3
      id: cache
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      if: steps.cache.outputs.cache-hit != 'true'
      run: |
        poetry install --no-interaction
        echo "=== All installed packages ==="
        poetry run pip list
        echo "=== Package installation locations ==="
        poetry run pip show feedparser || echo "feedparser not found"
        poetry run pip show pydantic
        poetry run pip show requests
        poetry run pip show beautifulsoup4
    - name: Verify package installations
      run: |
        echo "Testing pydantic:"
        poetry run python -c "import pydantic; print('pydantic version: ' + pydantic.__version__)"
        echo "Testing requests:"
        poetry run python -c "import requests; print('requests version: ' + requests.__version__)"
        echo "Testing beautifulsoup4:"
        poetry run python -c "import bs4; print('bs4 version: ' + bs4.__version__)"
        echo "Testing feedparser:"
        poetry run python -c "import feedparser; print('feedparser version: ' + feedparser.__version__)"
    - name: Install feedparser directly
      run: poetry run pip install feedparser==6.0.11
    - name: Verify feedparser installation
      run: |
        poetry run python -c "import feedparser; print('feedparser version: ' + feedparser.__version__)"
    - name: Download spaCy model
      run: poetry run python -m spacy download en_core_web_lg
    - name: Run tests with coverage
      run: |
        poetry run pytest --cov=src/local_newsifier --cov-report=xml --cov-report=term-missing tests/
    - name: Check coverage threshold
      run: |
        poetry run pytest --cov=src/local_newsifier --cov-fail-under=90 tests/
    - name: Upload coverage report
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: coverage.xml 